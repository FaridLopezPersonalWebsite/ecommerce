{"ast":null,"code":"// API.js\nconst API_BASE_URL = \"https://fakestoreapi.com\"; // Replace with your API base URL\n\nasync function getAllProducts() {\n  try {\n    const res = await fetch(`${API_BASE_URL}/products`);\n    const json = await res.json();\n    return json;\n  } catch (err) {\n    throw err;\n  }\n}\nasync function getProductById(id) {\n  try {\n    const res = await fetch(`${API_BASE_URL}/products/${id}`);\n    if (!res.ok) {\n      throw new Error(`Failed to fetch product with ID ${id}`);\n    }\n    const json = await res.json();\n    return json;\n  } catch (err) {\n    console.error(\"Error in getProductById:\", err);\n    throw err;\n  }\n}\n\n// Replace this with your actual API endpoint for user registration\nconst REGISTER_API_URL = \"${API_BASE_URL}/users\";\nasync function createAccount(accountData) {\n  try {\n    const res = await fetch(REGISTER_API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(accountData)\n    });\n    if (!res.ok) {\n      const json = await res.json();\n      throw new Error(`Failed to register user: ${json.message}`);\n    }\n    const json = await res.json();\n    return json.token;\n  } catch (err) {\n    throw err;\n  }\n}\nasync function userLogin(userObj) {\n  try {\n    const res = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userObj)\n    });\n    const json = await res.json();\n    if (!res.ok) {\n      throw new Error(`Login failed: ${json.message}`);\n    }\n    return {\n      token: json.token,\n      id: json.id\n    };\n  } catch (err) {\n    throw err;\n  }\n}\n\n// ... (existing code)\n\nexport { getAllProducts, getProductById, createAccount, userLogin\n// ... (existing exports)\n};","map":{"version":3,"names":["API_BASE_URL","getAllProducts","res","fetch","json","err","getProductById","id","ok","Error","console","error","REGISTER_API_URL","createAccount","accountData","method","headers","body","JSON","stringify","message","token","userLogin","userObj"],"sources":["/Users/faridlopez/Documents/Capstone/ecommerce/src/Components/API/index.jsx"],"sourcesContent":["// API.js\nconst API_BASE_URL = \"https://fakestoreapi.com\"; // Replace with your API base URL\n\nasync function getAllProducts() {\n  try {\n    const res = await fetch(`${API_BASE_URL}/products`);\n    const json = await res.json();\n    return json;\n  } catch (err) {\n    throw err;\n  }\n}\n\nasync function getProductById(id) {\n  try {\n    const res = await fetch(`${API_BASE_URL}/products/${id}`);\n\n    if (!res.ok) {\n      throw new Error(`Failed to fetch product with ID ${id}`);\n    }\n\n    const json = await res.json();\n    return json;\n  } catch (err) {\n    console.error(\"Error in getProductById:\", err);\n    throw err;\n  }\n}\n\n// Replace this with your actual API endpoint for user registration\nconst REGISTER_API_URL = \"${API_BASE_URL}/users\";\n\nasync function createAccount(accountData) {\n  try {\n    const res = await fetch(REGISTER_API_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(accountData),\n    });\n\n    if (!res.ok) {\n      const json = await res.json();\n      throw new Error(`Failed to register user: ${json.message}`);\n    }\n\n    const json = await res.json();\n    return json.token;\n  } catch (err) {\n    throw err;\n  }\n}\n\nasync function userLogin(userObj) {\n  try {\n    const res = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(userObj),\n    });\n\n    const json = await res.json();\n\n    if (!res.ok) {\n      throw new Error(`Login failed: ${json.message}`);\n    }\n\n    return { token: json.token, id: json.id };\n  } catch (err) {\n    throw err;\n  }\n}\n\n// ... (existing code)\n\nexport {\n  getAllProducts,\n  getProductById,\n  createAccount,\n  userLogin,\n  // ... (existing exports)\n};\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,0BAA0B,CAAC,CAAC;;AAEjD,eAAeC,cAAcA,CAAA,EAAG;EAC9B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,WAAU,CAAC;IACnD,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;IAC7B,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF;AAEA,eAAeC,cAAcA,CAACC,EAAE,EAAE;EAChC,IAAI;IACF,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,aAAYO,EAAG,EAAC,CAAC;IAEzD,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAE,mCAAkCF,EAAG,EAAC,CAAC;IAC1D;IAEA,MAAMH,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;IAC7B,OAAOA,IAAI;EACb,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZK,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEN,GAAG,CAAC;IAC9C,MAAMA,GAAG;EACX;AACF;;AAEA;AACA,MAAMO,gBAAgB,GAAG,uBAAuB;AAEhD,eAAeC,aAAaA,CAACC,WAAW,EAAE;EACxC,IAAI;IACF,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CAACS,gBAAgB,EAAE;MACxCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;IAClC,CAAC,CAAC;IAEF,IAAI,CAACZ,GAAG,CAACM,EAAE,EAAE;MACX,MAAMJ,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;MAC7B,MAAM,IAAIK,KAAK,CAAE,4BAA2BL,IAAI,CAACgB,OAAQ,EAAC,CAAC;IAC7D;IAEA,MAAMhB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;IAC7B,OAAOA,IAAI,CAACiB,KAAK;EACnB,CAAC,CAAC,OAAOhB,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF;AAEA,eAAeiB,SAASA,CAACC,OAAO,EAAE;EAChC,IAAI;IACF,MAAMrB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,YAAa,aAAY,EAAE;MACpDe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,OAAO;IAC9B,CAAC,CAAC;IAEF,MAAMnB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,CAAC,CAAC;IAE7B,IAAI,CAACF,GAAG,CAACM,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAE,iBAAgBL,IAAI,CAACgB,OAAQ,EAAC,CAAC;IAClD;IAEA,OAAO;MAAEC,KAAK,EAAEjB,IAAI,CAACiB,KAAK;MAAEd,EAAE,EAAEH,IAAI,CAACG;IAAG,CAAC;EAC3C,CAAC,CAAC,OAAOF,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF;;AAEA;;AAEA,SACEJ,cAAc,EACdK,cAAc,EACdO,aAAa,EACbS;AACA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}