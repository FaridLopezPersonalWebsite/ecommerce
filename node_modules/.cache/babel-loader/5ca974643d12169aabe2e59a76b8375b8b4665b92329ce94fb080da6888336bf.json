{"ast":null,"code":"var _jsxFileName = \"/Users/faridlopez/Documents/Capstone/ecommerce/src/Context/ShopContext.jsx\",\n  _s = $RefreshSig$();\n// ShopContext.jsx\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { getAllProducts, userLogin } from \"../Components/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  // Assuming your product IDs start from 1\n  for (let index = 1; index <= getAllProducts().length; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    // Check if the user is logged in (using token in local storage)\n    const storedToken = localStorage.getItem(\"authToken\");\n    if (storedToken) {\n      // Fetch user details using the token (replace with actual API call)\n      // For simplicity, let's assume the API returns user details with the token\n      const userFromToken = {\n        id: 1,\n        username: \"exampleUser\"\n      };\n      setUser(userFromToken);\n      setToken(storedToken);\n    }\n  }, []);\n  const login = async userObj => {\n    try {\n      const response = await userLogin(userObj);\n      setToken(response.token);\n      setUser({\n        id: response.id,\n        username: userObj.username\n      });\n      // Save the token in local storage\n      localStorage.setItem(\"authToken\", response.token);\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n    }\n  };\n  const logout = () => {\n    // Remove the token from local storage\n    localStorage.removeItem(\"authToken\");\n    setUser(null);\n    setToken(null);\n  };\n\n  // ... rest of the functions\n\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product: getAllProducts(),\n    cartItems,\n    addToCart,\n    removeFromCart,\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"JbFlpLBoU35XBDUFzi4+ndRnJKg=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","getAllProducts","userLogin","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","length","ShopContextProvider","props","_s","cartItems","setCartItems","user","setUser","token","setToken","storedToken","localStorage","getItem","userFromToken","id","username","login","userObj","response","setItem","error","console","logout","removeItem","contextValue","getTotalCartItems","getTotalCartAmount","all_product","addToCart","removeFromCart","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/faridlopez/Documents/Capstone/ecommerce/src/Context/ShopContext.jsx"],"sourcesContent":["// ShopContext.jsx\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport { getAllProducts, userLogin } from \"../Components/API\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  // Assuming your product IDs start from 1\r\n  for (let index = 1; index <= getAllProducts().length; index++) {\r\n    cart[index] = 0;\r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check if the user is logged in (using token in local storage)\r\n    const storedToken = localStorage.getItem(\"authToken\");\r\n    if (storedToken) {\r\n      // Fetch user details using the token (replace with actual API call)\r\n      // For simplicity, let's assume the API returns user details with the token\r\n      const userFromToken = { id: 1, username: \"exampleUser\" };\r\n      setUser(userFromToken);\r\n      setToken(storedToken);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (userObj) => {\r\n    try {\r\n      const response = await userLogin(userObj);\r\n      setToken(response.token);\r\n      setUser({ id: response.id, username: userObj.username });\r\n      // Save the token in local storage\r\n      localStorage.setItem(\"authToken\", response.token);\r\n    } catch (error) {\r\n      console.error(\"Error during login:\", error);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Remove the token from local storage\r\n    localStorage.removeItem(\"authToken\");\r\n    setUser(null);\r\n    setToken(null);\r\n  };\r\n\r\n  // ... rest of the functions\r\n\r\n  const contextValue = {\r\n    getTotalCartItems,\r\n    getTotalCartAmount,\r\n    all_product: getAllProducts(),\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    user,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,cAAc,EAAEC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAE9C,MAAMQ,cAAc,GAAGA,CAAA,KAAM;EAC3B,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb;EACA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAIP,cAAc,CAAC,CAAC,CAACQ,MAAM,EAAED,KAAK,EAAE,EAAE;IAC7DD,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC;EACjB;EACA,OAAOD,IAAI;AACb,CAAC;AAED,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAACO,cAAc,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACrD,IAAIF,WAAW,EAAE;MACf;MACA;MACA,MAAMG,aAAa,GAAG;QAAEC,EAAE,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAc,CAAC;MACxDR,OAAO,CAACM,aAAa,CAAC;MACtBJ,QAAQ,CAACC,WAAW,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAOC,OAAO,IAAK;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzB,SAAS,CAACwB,OAAO,CAAC;MACzCR,QAAQ,CAACS,QAAQ,CAACV,KAAK,CAAC;MACxBD,OAAO,CAAC;QAAEO,EAAE,EAAEI,QAAQ,CAACJ,EAAE;QAAEC,QAAQ,EAAEE,OAAO,CAACF;MAAS,CAAC,CAAC;MACxD;MACAJ,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAED,QAAQ,CAACV,KAAK,CAAC;IACnD,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAX,YAAY,CAACY,UAAU,CAAC,WAAW,CAAC;IACpChB,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;;EAED;;EAEA,MAAMe,YAAY,GAAG;IACnBC,iBAAiB;IACjBC,kBAAkB;IAClBC,WAAW,EAAEnC,cAAc,CAAC,CAAC;IAC7BY,SAAS;IACTwB,SAAS;IACTC,cAAc;IACdvB,IAAI;IACJU,KAAK;IACLM;EACF,CAAC;EAED,oBACE3B,OAAA,CAACC,WAAW,CAACkC,QAAQ;IAACC,KAAK,EAAEP,YAAa;IAAAQ,QAAA,EACvC9B,KAAK,CAAC8B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACjC,EAAA,CAvDIF,mBAAmB;AAAAoC,EAAA,GAAnBpC,mBAAmB;AAyDzB,eAAeA,mBAAmB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}